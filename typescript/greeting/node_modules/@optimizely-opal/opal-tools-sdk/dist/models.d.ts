/**
 * Types of parameters supported by Opal tools
 */
export declare enum ParameterType {
    String = "string",
    Integer = "integer",
    Number = "number",
    Boolean = "boolean",
    List = "list",
    Dictionary = "object"
}
/**
 * Parameter definition for an Opal tool
 */
export declare class Parameter {
    name: string;
    type: ParameterType;
    description: string;
    required: boolean;
    /**
     * Create a new parameter definition
     * @param name Parameter name
     * @param type Parameter type
     * @param description Parameter description
     * @param required Whether the parameter is required
     */
    constructor(name: string, type: ParameterType, description: string, required: boolean);
    /**
     * Convert to JSON for the discovery endpoint
     */
    toJSON(): {
        name: string;
        type: ParameterType;
        description: string;
        required: boolean;
    };
}
/**
 * Authentication requirements for an Opal tool
 */
export declare class AuthRequirement {
    provider: string;
    scopeBundle: string;
    required: boolean;
    /**
     * Create a new authentication requirement
     * @param provider Auth provider (e.g., "google", "microsoft")
     * @param scopeBundle Scope bundle (e.g., "calendar", "drive")
     * @param required Whether authentication is required
     */
    constructor(provider: string, scopeBundle: string, required?: boolean);
    /**
     * Convert to JSON for the discovery endpoint
     */
    toJSON(): {
        provider: string;
        scope_bundle: string;
        required: boolean;
    };
}
/**
 * Function definition for an Opal tool
 */
export declare class Function {
    name: string;
    description: string;
    parameters: Parameter[];
    endpoint: string;
    authRequirements?: AuthRequirement[] | undefined;
    /**
     * HTTP method for the endpoint (default: POST)
     */
    httpMethod: string;
    /**
     * Create a new function definition
     * @param name Function name
     * @param description Function description
     * @param parameters Function parameters
     * @param endpoint API endpoint
     * @param authRequirements Authentication requirements (optional)
     */
    constructor(name: string, description: string, parameters: Parameter[], endpoint: string, authRequirements?: AuthRequirement[] | undefined);
    /**
     * Convert to JSON for the discovery endpoint
     */
    toJSON(): any;
}
